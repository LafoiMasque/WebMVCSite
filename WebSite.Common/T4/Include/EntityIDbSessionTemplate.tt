<#+
// <copyright file="EntityIDbSessionTemplate.tt" company="">
//  Copyright © . All Rights Reserved.
// </copyright>

public class EntityIDbSessionTemplate : CSharpTemplate
{
    private T4ModelInfo m_model;

	public string FileNameWithoutExtension
	{
		get
		{
			return "IDbSession";
		}
	}

	public string GeneratedFileNameWithExtension
	{
		get
		{
                return "IDbSession.Generated.cs";
		}
	}
	public EntityIDbSessionTemplate(T4ModelInfo model)
    {
        m_model = model;
    }

	public override string TransformText()
	{
		base.TransformText();
#>
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
//	   如存在本生成代码外的新需求，请在相同命名空间下创建同名分部类定义<#= FileNameWithoutExtension #>接口。
// </auto-generated>
//
// <copyright file="<#= GeneratedFileNameWithExtension #>">
//		Copyright(c)2018 rights reserved.
//		开 发 者：黄翔宇@中国
//		生成时间：<#= DateTime.Now.ToString("yyyy-MM-dd HH:mm") #>
// </copyright>
//------------------------------------------------------------------------------
using System.Data.Entity;

namespace WebSite.IDAL
{
	/// <summary>
	/// 业务层调用的是数据会话层的接口。
	/// </summary>
	public partial interface <#= FileNameWithoutExtension #>
	{
		DbContext DbContext { get; }
<#+
        foreach (PropertyInfo item in m_model.Properties)
        {
            if (item.PropertyType.IsGenericType)
            {
                string entityName=item.PropertyType.GenericTypeArguments[0].Name;
#>
        I<#= entityName #>Dal <#= entityName #>Dal { get; set; }
<#+
		    }
        }
#>
		bool SaveChanged();
	}
}

<#+
        return this.GenerationEnvironment.ToString();
	}
}
#>
